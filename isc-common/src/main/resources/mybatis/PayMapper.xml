<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wow.common.dao.PayDao">
	<resultMap id="BaseResultMap" type="cn.wow.common.domain.Pay">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="is_delete" jdbcType="INTEGER" property="isDelete" />
		<result column="price" property="price" jdbcType="DOUBLE" />
		<result column="pay_date" property="payDate" jdbcType="DATE" />
	</resultMap>

	<sql id="base_columns">
		id, remark, create_time, is_delete, price, pay_date
	</sql>

	<select id="selectOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="base_columns" />
		from pay where id = #{id,jdbcType=BIGINT}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		update pay set
		is_delete = 1 where id = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="insert" parameterType="cn.wow.common.domain.Pay">
		insert into pay (remark, create_time, is_delete, price, pay_date) values
		(#{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{isDelete,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{payDate,jdbcType=DATE} )
	</insert>

	<update id="update" parameterType="cn.wow.common.domain.Pay">
		update pay
		<set>
			<if test="payDate != null">
				pay_date = #{payDate,jdbcType=DATE},
			</if>
			<if test="isDelete != null">
				is_delete = #{isDelete,jdbcType=INTEGER},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			remark = #{remark,jdbcType=VARCHAR}
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>


	<select id="selectAllList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="base_columns" />
		from pay
		<where>
		
			<if test="startPayDate != null">
				and pay_date &gt;=  #{startPayDate,jdbcType=DATE}
			</if>
			
			<if test="endPayDate != null and endPayDate != ''">
				and pay_date &lt;= #{endPayDate, jdbcType=DATE}
			</if>
		
			<if test="startCreateTime != null and startCreateTime != ''">
				and create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null and endCreateTime != ''">
				and create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="isDelete != null">
				and is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>

		<choose>
			<when test="custom_order_sql != null">
				order by ${custom_order_sql}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
	</select>

	<select id="statisticTotal" resultType="java.lang.Double" parameterType="java.util.Map" >
		select case when sum(price)  is null then 0 else sum(price)  end price from pay
		
		<where>
		
			<if test="startPayDate != null">
				and pay_date &gt;=  #{startPayDate,jdbcType=DATE}
			</if>
			
			<if test="endPayDate != null and endPayDate != ''">
				and pay_date &lt;= #{endPayDate, jdbcType=DATE}
			</if>
		
			<if test="startCreateTime != null and startCreateTime != ''">
				and create_time &gt;= #{startCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="endCreateTime != null and endCreateTime != ''">
				and create_time &lt;= #{endCreateTime, jdbcType=TIMESTAMP}
			</if>
			<if test="isDelete != null">
				and is_delete = #{isDelete,jdbcType=INTEGER}
			</if>
		</where>
	</select>

</mapper>